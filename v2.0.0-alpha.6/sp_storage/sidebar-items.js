initSidebarItems({"enum":[["ChildInfo","Information related to a child state."],["ChildType","Type of child. It does not strictly define different child type, it can also be related to technical consideration or api variant."],["OwnedChildInfo","Owned version of `ChildInfo`. To be use in persistence layers."]],"mod":[["well_known_keys","List of all well known keys and prefixes in storage."]],"struct":[["ChildStorageKey","A wrapper around a child storage key."],["ChildTrie","A child trie of default type. Default is the same implementation as the top trie. It share its trie node storage with any kind of key, and its unique id needs to be collision free (eg strong crypto hash)."],["OwnedChildTrie","Owned version of default child trie `ChildTrie`."],["Storage","Struct containing data needed for a storage."],["StorageChangeSet","Storage change set"],["StorageChild","Child trie storage data."],["StorageData","Storage data associated to a [`StorageKey`]."],["StorageKey","Storage key."]],"type":[["StorageMap","Map of data to use in a storage, it is a collection of byte key and values."]]});