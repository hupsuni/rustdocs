initSidebarItems({"enum":[["NetworkBehaviourAction","An action that a [`NetworkBehaviour`] can trigger in the [`Swarm`] in whose context it is executing."]],"mod":[["protocols_handler","Once a connection to a remote peer is established, a `ProtocolsHandler` negotiates and handles one or more specific protocols on the connection."],["toggle",""]],"struct":[["ExpandedSwarm","Contains the state of the network, plus the way it should behave."],["IntoProtocolsHandlerSelect","Implementation of `IntoProtocolsHandler` that combines two protocols into one."],["OneShotHandler","Implementation of `ProtocolsHandler` that opens a new substream for each individual message."],["ProtocolsHandlerSelect","Implementation of `ProtocolsHandler` that combines two protocols into one."],["SwarmBuilder",""],["SwarmPollParameters","Parameters passed to `poll()`, that the `NetworkBehaviour` has access to."]],"trait":[["NetworkBehaviour","A behaviour for the network. Allows customizing the swarm."],["NetworkBehaviourEventProcess","Used when deriving `NetworkBehaviour`. When deriving `NetworkBehaviour`, must be implemented for all the possible event types generated by the various fields."],["PollParameters","Parameters passed to `poll()`, that the `NetworkBehaviour` has access to."]],"type":[["Swarm","Contains the state of the network, plus the way it should behave."]]});