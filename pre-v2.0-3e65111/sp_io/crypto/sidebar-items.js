initSidebarItems({"fn":[["ed25519_generate","Generate an `ed22519` key for the given key type using an optional `seed` and store it in the keystore."],["ed25519_public_keys","Returns all `ed25519` public keys for the given key id from the keystore."],["ed25519_sign","Sign the given `msg` with the `ed25519` key that corresponds to the given public key and key type in the keystore."],["ed25519_verify","Verify an `ed25519` signature."],["secp256k1_ecdsa_recover","Verify and recover a SECP256k1 ECDSA signature. - `sig` is passed in RSV format. V should be either 0/1 or 27/28. Returns `Err` if the signature is bad, otherwise the 64-byte pubkey (doesn't include the 0x04 prefix)."],["secp256k1_ecdsa_recover_compressed","Verify and recover a SECP256k1 ECDSA signature. - `sig` is passed in RSV format. V should be either 0/1 or 27/28. - returns `Err` if the signature is bad, otherwise the 33-byte compressed pubkey."],["sr25519_generate","Generate an `sr22519` key for the given key type using an optional seed and store it in the keystore."],["sr25519_public_keys","Returns all `sr25519` public keys for the given key id from the keystore."],["sr25519_sign","Sign the given `msg` with the `sr25519` key that corresponds to the given public key and key type in the keystore."],["sr25519_verify","Verify an `sr25519` signature."]],"struct":[["HostFunctions","Provides implementations for the extern host functions."]]});