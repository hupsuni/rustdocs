initSidebarItems({"enum":[["AccountKeyring","Set of test accounts."],["Ed25519Keyring","Set of test accounts."],["WasmExecutionMethod","Specification of different methods of executing the runtime Wasm code."]],"fn":[["new","Creates new client instance used for tests."],["new_light","Creates new light client instance used for tests."],["new_light_fetcher","Creates new light client fetcher used for tests."]],"mod":[["blockchain","Substrate blockchain traits and primtives"],["client_ext","Client extension for tests."],["prelude","A prelude to import in tests."],["sc_client","Substrate Client and associated logic."],["sc_client_db","Client backend that uses RocksDB database as storage."],["sc_executor","A crate that provides means of executing/dispatching calls into the runtime."],["sp_consensus","Common utilities for building and using consensus engines in substrate."],["trait_tests","tests that should hold for all implementations of certain traits. to test implementations without duplication."]],"struct":[["Backend","Disk backend. Keeps data in a key-value store. In archive mode, trie nodes are kept from all blocks. Otherwise, trie nodes are kept only from some recent blocks."],["Blake2Hasher","Concrete implementation of Hasher using Blake2b 256-bit hashes"],["ExecutionExtensions","A producer of execution extensions for offchain calls."],["GenesisParameters","Parameters of test-client builder with test-runtime."],["LightFetcher","Implementation of light client fetcher used in tests."],["LocalExecutor","A unit struct which implements `NativeExecutionDispatch` feeding in the hard-coded runtime."],["NativeExecutor","A generic `CodeExecutor` implementation that uses a delegate to determine wasm code equivalence and dispatch to native code when possible, falling back on `WasmExecutor` when not."],["Storage","Struct containing data needed for a storage."],["StorageChild","Child trie storage data."],["TestClientBuilder","A builder for creating a test client instance."]],"trait":[["BlockBuilderExt","Extension trait for test block builder."],["DefaultTestClientBuilderExt","A `TestClientBuilder` with default backend and executor."],["GenesisInit","A genesis storage initialisation trait."],["TestClientBuilderExt","A `test-runtime` extensions to `TestClientBuilder`."]],"type":[["Backend","Test client database backend."],["BareCryptoStorePtr","A pointer to the key store."],["Client","Test client type with `LocalExecutor` and generic Backend."],["Executor","Test client executor."],["LightBackend","Test client light database backend."],["LightBackend","Test client light database backend."],["LightExecutor","Test client light executor."],["TestClient","A test client with default backend."],["TestClientBuilder","A `TestClient` with `test-runtime` builder."]]});