(function() {var implementors = {};
implementors["libp2p_kad"] = [{text:"impl&lt;TSubstream, TUserData&gt; <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a> for <a class=\"struct\" href=\"libp2p_kad/handler/struct.KademliaHandler.html\" title=\"struct libp2p_kad::handler::KademliaHandler\">KademliaHandler</a>&lt;TSubstream, TUserData&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSubstream: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;TUserData: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>",synthetic:false,types:["libp2p_kad::handler::KademliaHandler"]},];
implementors["libp2p_ping"] = [{text:"impl&lt;TSubstream&gt; <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a> for <a class=\"struct\" href=\"libp2p_ping/handler/struct.PingHandler.html\" title=\"struct libp2p_ping::handler::PingHandler\">PingHandler</a>&lt;TSubstream&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TSubstream: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>",synthetic:false,types:["libp2p_ping::handler::PingHandler"]},];
implementors["libp2p_swarm"] = [];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()