(function() {var implementors = {};
implementors["futures"] = [];
implementors["futures_util"] = [{text:"impl&lt;St&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"futures_util/compat/struct.Compat.html\" title=\"struct futures_util::compat::Compat\">Compat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream03</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>",synthetic:false,types:["futures_util::compat::compat03as01::Compat"]},];
implementors["h2"] = [{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"h2/client/struct.PushPromises.html\" title=\"struct h2::client::PushPromises\">PushPromises</a>",synthetic:false,types:["h2::client::PushPromises"]},{text:"impl&lt;T, B&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"h2/server/struct.Connection.html\" title=\"struct h2::server::Connection\">Connection</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"type\" href=\"bytes/buf/into_buf/trait.IntoBuf.html#associatedtype.Buf\" title=\"type bytes::buf::into_buf::IntoBuf::Buf\">Buf</a>: 'static,&nbsp;</span>",synthetic:false,types:["h2::server::Connection"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"h2/struct.RecvStream.html\" title=\"struct h2::RecvStream\">RecvStream</a>",synthetic:false,types:["h2::share::RecvStream"]},];
implementors["jsonrpc_client_transports"] = [{text:"impl&lt;TMetadata, THandler&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"jsonrpc_client_transports/transports/local/struct.LocalRpc.html\" title=\"struct jsonrpc_client_transports::transports::local::LocalRpc\">LocalRpc</a>&lt;THandler, TMetadata&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TMetadata: <a class=\"trait\" href=\"jsonrpc_core/calls/trait.Metadata.html\" title=\"trait jsonrpc_core::calls::Metadata\">Metadata</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;THandler: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"jsonrpc_core/io/struct.MetaIoHandler.html\" title=\"struct jsonrpc_core::io::MetaIoHandler\">MetaIoHandler</a>&lt;TMetadata&gt;&gt;,&nbsp;</span>",synthetic:false,types:["jsonrpc_client_transports::transports::local::LocalRpc"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"jsonrpc_client_transports/struct.SubscriptionStream.html\" title=\"struct jsonrpc_client_transports::SubscriptionStream\">SubscriptionStream</a>",synthetic:false,types:["jsonrpc_client_transports::SubscriptionStream"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"jsonrpc_client_transports/struct.TypedSubscriptionStream.html\" title=\"struct jsonrpc_client_transports::TypedSubscriptionStream\">TypedSubscriptionStream</a>&lt;T&gt;",synthetic:false,types:["jsonrpc_client_transports::TypedSubscriptionStream"]},];
implementors["jsonrpc_server_utils"] = [{text:"impl&lt;S, I&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"jsonrpc_server_utils/struct.SuspendableStream.html\" title=\"struct jsonrpc_server_utils::SuspendableStream\">SuspendableStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = I, Error = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,&nbsp;</span>",synthetic:false,types:["jsonrpc_server_utils::suspendable_stream::SuspendableStream"]},];
implementors["libp2p"] = [{text:"impl&lt;TInner, TConn&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p/bandwidth/struct.BandwidthListener.html\" title=\"struct libp2p::bandwidth::BandwidthListener\">BandwidthListener</a>&lt;TInner&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TInner: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p/core/transport/enum.ListenerEvent.html\" title=\"enum libp2p::core::transport::ListenerEvent\">ListenerEvent</a>&lt;TConn&gt;&gt;,&nbsp;</span>",synthetic:false,types:["libp2p::bandwidth::BandwidthListener"]},];
implementors["libp2p_core"] = [{text:"impl&lt;A, B, I&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherOutput.html\" title=\"enum libp2p_core::either::EitherOutput\">EitherOutput</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = I&gt;,&nbsp;</span>",synthetic:false,types:["libp2p_core::either::EitherOutput"]},{text:"impl&lt;AStream, BStream, AInner, BInner&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherListenStream.html\" title=\"enum libp2p_core::either::EitherListenStream\">EitherListenStream</a>&lt;AStream, BStream&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AStream: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;AInner&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;BStream: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;BInner&gt;&gt;,&nbsp;</span>",synthetic:false,types:["libp2p_core::either::EitherListenStream"]},{text:"impl&lt;TTrans&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/nodes/listeners/struct.ListenersStream.html\" title=\"struct libp2p_core::nodes::listeners::ListenersStream\">ListenersStream</a>&lt;TTrans&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TTrans: <a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>,&nbsp;</span>",synthetic:false,types:["libp2p_core::nodes::listeners::ListenersStream"]},{text:"impl&lt;TListener, TMap, TTransOut, TMapOut, TListUpgr, TTransErr&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/and_then/struct.AndThenStream.html\" title=\"struct libp2p_core::transport::and_then::AndThenStream\">AndThenStream</a>&lt;TListener, TMap&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TListener: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;TListUpgr&gt;, Error = TTransErr&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;TListUpgr: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&lt;Item = TTransOut, Error = TTransErr&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;TMap: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(TTransOut, <a class=\"enum\" href=\"libp2p_core/enum.ConnectedPoint.html\" title=\"enum libp2p_core::ConnectedPoint\">ConnectedPoint</a>) -&gt; TMapOut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;TMapOut: <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>,&nbsp;</span>",synthetic:false,types:["libp2p_core::transport::and_then::AndThenStream"]},{text:"impl&lt;T, F, A, B, X&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/map/struct.MapStream.html\" title=\"struct libp2p_core::transport::map::MapStream\">MapStream</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;X&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&lt;Item = A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, <a class=\"enum\" href=\"libp2p_core/enum.ConnectedPoint.html\" title=\"enum libp2p_core::ConnectedPoint\">ConnectedPoint</a>) -&gt; B + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>",synthetic:false,types:["libp2p_core::transport::map::MapStream"]},{text:"impl&lt;T, F, TErr&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/map_err/struct.MapErrListener.html\" title=\"struct libp2p_core::transport::map_err::MapErrListener\">MapErrListener</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T::<a class=\"type\" href=\"libp2p_core/transport/trait.Transport.html#associatedtype.Error\" title=\"type libp2p_core::transport::Transport::Error\">Error</a>) -&gt; TErr + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;TErr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a>,&nbsp;</span>",synthetic:false,types:["libp2p_core::transport::map_err::MapErrListener"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/memory/struct.Listener.html\" title=\"struct libp2p_core::transport::memory::Listener\">Listener</a>",synthetic:false,types:["libp2p_core::transport::memory::Listener"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/memory/struct.Chan.html\" title=\"struct libp2p_core::transport::memory::Chan\">Chan</a>&lt;T&gt;",synthetic:false,types:["libp2p_core::transport::memory::Chan"]},{text:"impl&lt;InnerStream, O&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/timeout/struct.TimeoutListener.html\" title=\"struct libp2p_core::transport::timeout::TimeoutListener\">TimeoutListener</a>&lt;InnerStream&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;InnerStream: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;O&gt;&gt;,&nbsp;</span>",synthetic:false,types:["libp2p_core::transport::timeout::TimeoutListener"]},{text:"impl&lt;S, U, F, I, C, D&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_core/transport/upgrade/struct.ListenerStream.html\" title=\"struct libp2p_core::transport::upgrade::ListenerStream\">ListenerStream</a>&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"libp2p_core/transport/enum.ListenerEvent.html\" title=\"enum libp2p_core::transport::ListenerEvent\">ListenerEvent</a>&lt;F&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>I, C<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;C, Output = D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>",synthetic:false,types:["libp2p_core::transport::upgrade::ListenerStream"]},];
implementors["libp2p_plaintext"] = [{text:"impl&lt;S&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_plaintext/struct.PlainTextMiddleware.html\" title=\"struct libp2p_plaintext::PlainTextMiddleware\">PlainTextMiddleware</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>",synthetic:false,types:["libp2p_plaintext::PlainTextMiddleware"]},];
implementors["libp2p_secio"] = [{text:"impl&lt;S&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_secio/struct.SecioMiddleware.html\" title=\"struct libp2p_secio::SecioMiddleware\">SecioMiddleware</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>",synthetic:false,types:["libp2p_secio::SecioMiddleware"]},];
implementors["libp2p_swarm"] = [{text:"impl&lt;TTransport, TBehaviour, TMuxer, TInEvent, TOutEvent, THandler, THandlerErr, TConnInfo&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_swarm/struct.ExpandedSwarm.html\" title=\"struct libp2p_swarm::ExpandedSwarm\">ExpandedSwarm</a>&lt;TTransport, TBehaviour, TInEvent, TOutEvent, THandler, THandlerErr, TConnInfo&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TBehaviour: <a class=\"trait\" href=\"libp2p_swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p_swarm::NetworkBehaviour\">NetworkBehaviour</a>&lt;ProtocolsHandler = THandler&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;TMuxer: <a class=\"trait\" href=\"libp2p_core/muxing/trait.StreamMuxer.html\" title=\"trait libp2p_core::muxing::StreamMuxer\">StreamMuxer</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TMuxer as <a class=\"trait\" href=\"libp2p_core/muxing/trait.StreamMuxer.html\" title=\"trait libp2p_core::muxing::StreamMuxer\">StreamMuxer</a>&gt;::<a class=\"type\" href=\"libp2p_core/muxing/trait.StreamMuxer.html#associatedtype.OutboundSubstream\" title=\"type libp2p_core::muxing::StreamMuxer::OutboundSubstream\">OutboundSubstream</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TMuxer as <a class=\"trait\" href=\"libp2p_core/muxing/trait.StreamMuxer.html\" title=\"trait libp2p_core::muxing::StreamMuxer\">StreamMuxer</a>&gt;::<a class=\"type\" href=\"libp2p_core/muxing/trait.StreamMuxer.html#associatedtype.Substream\" title=\"type libp2p_core::muxing::StreamMuxer::Substream\">Substream</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport: <a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>TConnInfo, TMuxer<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport::<a class=\"type\" href=\"libp2p_core/transport/trait.Transport.html#associatedtype.Error\" title=\"type libp2p_core::transport::Transport::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport::<a class=\"type\" href=\"libp2p_core/transport/trait.Transport.html#associatedtype.Listener\" title=\"type libp2p_core::transport::Transport::Listener\">Listener</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport::<a class=\"type\" href=\"libp2p_core/transport/trait.Transport.html#associatedtype.ListenerUpgrade\" title=\"type libp2p_core::transport::Transport::ListenerUpgrade\">ListenerUpgrade</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;TTransport::<a class=\"type\" href=\"libp2p_core/transport/trait.Transport.html#associatedtype.Dial\" title=\"type libp2p_core::transport::Transport::Dial\">Dial</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;THandlerErr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;THandler: <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a>: <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&lt;InEvent = TInEvent, OutEvent = TOutEvent, Substream = <a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;, Error = THandlerErr&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InEvent\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InEvent\">InEvent</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutEvent\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutEvent\">OutEvent</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.Error\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundOpenInfo\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundOpenInfo\">OutboundOpenInfo</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a>: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt;&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html#associatedtype.Future\" title=\"type libp2p_core::upgrade::InboundUpgrade::Future\">Future</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt;&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html#associatedtype.Error\" title=\"type libp2p_core::upgrade::InboundUpgrade::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.Info\" title=\"type libp2p_core::upgrade::UpgradeInfo::Info\">Info</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.InfoIter\" title=\"type libp2p_core::upgrade::UpgradeInfo::InfoIter\">InfoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::InboundProtocol\">InboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.InfoIter\" title=\"type libp2p_core::upgrade::UpgradeInfo::InfoIter\">InfoIter</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a>: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html\" title=\"trait libp2p_core::upgrade::OutboundUpgrade\">OutboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html\" title=\"trait libp2p_core::upgrade::OutboundUpgrade\">OutboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt;&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html#associatedtype.Future\" title=\"type libp2p_core::upgrade::OutboundUpgrade::Future\">Future</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html\" title=\"trait libp2p_core::upgrade::OutboundUpgrade\">OutboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/nodes/node/type.Substream.html\" title=\"type libp2p_core::nodes::node::Substream\">Substream</a>&lt;TMuxer&gt;&gt;&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html#associatedtype.Error\" title=\"type libp2p_core::upgrade::OutboundUpgrade::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.Info\" title=\"type libp2p_core::upgrade::UpgradeInfo::Info\">Info</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.InfoIter\" title=\"type libp2p_core::upgrade::UpgradeInfo::InfoIter\">InfoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a> as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::protocols_handler::ProtocolsHandler::OutboundProtocol\">OutboundProtocol</a> as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>&gt;::<a class=\"type\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html#associatedtype.InfoIter\" title=\"type libp2p_core::upgrade::UpgradeInfo::InfoIter\">InfoIter</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;<a class=\"struct\" href=\"libp2p_swarm/protocols_handler/struct.NodeHandlerWrapper.html\" title=\"struct libp2p_swarm::protocols_handler::NodeHandlerWrapper\">NodeHandlerWrapper</a>&lt;&lt;THandler as <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&gt;::<a class=\"type\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html#associatedtype.Handler\" title=\"type libp2p_swarm::protocols_handler::IntoProtocolsHandler::Handler\">Handler</a>&gt; as <a class=\"trait\" href=\"libp2p_core/nodes/handled_node/trait.NodeHandler.html\" title=\"trait libp2p_core::nodes::handled_node::NodeHandler\">NodeHandler</a>&gt;::<a class=\"type\" href=\"libp2p_core/nodes/handled_node/trait.NodeHandler.html#associatedtype.OutboundOpenInfo\" title=\"type libp2p_core::nodes::handled_node::NodeHandler::OutboundOpenInfo\">OutboundOpenInfo</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;TConnInfo: <a class=\"trait\" href=\"libp2p_core/nodes/collection/trait.ConnectionInfo.html\" title=\"trait libp2p_core::nodes::collection::ConnectionInfo\">ConnectionInfo</a>&lt;PeerId = <a class=\"struct\" href=\"libp2p_core/peer_id/struct.PeerId.html\" title=\"struct libp2p_core::peer_id::PeerId\">PeerId</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,&nbsp;</span>",synthetic:false,types:["libp2p_swarm::ExpandedSwarm"]},];
implementors["libp2p_tcp"] = [{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_tcp/struct.TcpListener.html\" title=\"struct libp2p_tcp::TcpListener\">TcpListener</a>",synthetic:false,types:["libp2p_tcp::TcpListener"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_tcp/struct.TcpListenStream.html\" title=\"struct libp2p_tcp::TcpListenStream\">TcpListenStream</a>",synthetic:false,types:["libp2p_tcp::TcpListenStream"]},];
implementors["libp2p_uds"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_uds/struct.ListenerStream.html\" title=\"struct libp2p_uds::ListenerStream\">ListenerStream</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>,&nbsp;</span>",synthetic:false,types:["libp2p_uds::ListenerStream"]},];
implementors["libp2p_wasm_ext"] = [{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_wasm_ext/struct.Listen.html\" title=\"struct libp2p_wasm_ext::Listen\">Listen</a>",synthetic:false,types:["libp2p_wasm_ext::Listen"]},];
implementors["libp2p_websocket"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"libp2p_websocket/framed/struct.BytesConnection.html\" title=\"struct libp2p_websocket::framed::BytesConnection\">BytesConnection</a>&lt;T&gt;",synthetic:false,types:["libp2p_websocket::framed::BytesConnection"]},];
implementors["soketto"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"soketto/connection/struct.Connection.html\" title=\"struct soketto::connection::Connection\">Connection</a>&lt;T&gt;",synthetic:false,types:["soketto::connection::Connection"]},];
implementors["tokio_buf"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"tokio_buf/trait.BufStream.html\" title=\"trait tokio_buf::BufStream\">BufStream</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_buf/util/struct.IntoStream.html\" title=\"struct tokio_buf::util::IntoStream\">IntoStream</a>&lt;T&gt;",synthetic:false,types:["tokio_buf::util::stream::IntoStream"]},];
implementors["tokio_fs"] = [{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_fs/struct.ReadDir.html\" title=\"struct tokio_fs::ReadDir\">ReadDir</a>",synthetic:false,types:["tokio_fs::read_dir::ReadDir"]},];
implementors["tokio_io"] = [{text:"impl&lt;A&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_io/io/struct.Lines.html\" title=\"struct tokio_io::io::Lines\">Lines</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/trait.AsyncRead.html\" title=\"trait tokio_io::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a>,&nbsp;</span>",synthetic:false,types:["tokio_io::lines::Lines"]},];
implementors["tokio_sync"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.Receiver.html\" title=\"struct tokio_sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;",synthetic:false,types:["tokio_sync::mpsc::bounded::Receiver"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio_sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;",synthetic:false,types:["tokio_sync::mpsc::unbounded::UnboundedReceiver"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_sync/watch/struct.Receiver.html\" title=\"struct tokio_sync::watch::Receiver\">Receiver</a>&lt;T&gt;",synthetic:false,types:["tokio_sync::watch::Receiver"]},];
implementors["tokio_tcp"] = [{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_tcp/struct.Incoming.html\" title=\"struct tokio_tcp::Incoming\">Incoming</a>",synthetic:false,types:["tokio_tcp::incoming::Incoming"]},];
implementors["tokio_timer"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_timer/delay_queue/struct.DelayQueue.html\" title=\"struct tokio_timer::delay_queue::DelayQueue\">DelayQueue</a>&lt;T&gt;",synthetic:false,types:["tokio_timer::delay_queue::DelayQueue"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_timer/throttle/struct.Throttle.html\" title=\"struct tokio_timer::throttle::Throttle\">Throttle</a>&lt;T&gt;",synthetic:false,types:["tokio_timer::throttle::Throttle"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_timer/timeout/struct.Timeout.html\" title=\"struct tokio_timer::timeout::Timeout\">Timeout</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>,&nbsp;</span>",synthetic:false,types:["tokio_timer::timeout::Timeout"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_timer/struct.Interval.html\" title=\"struct tokio_timer::Interval\">Interval</a>",synthetic:false,types:["tokio_timer::interval::Interval"]},];
implementors["tokio_udp"] = [{text:"impl&lt;C:&nbsp;<a class=\"trait\" href=\"tokio_io/codec/decoder/trait.Decoder.html\" title=\"trait tokio_io::codec::decoder::Decoder\">Decoder</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_udp/struct.UdpFramed.html\" title=\"struct tokio_udp::UdpFramed\">UdpFramed</a>&lt;C&gt;",synthetic:false,types:["tokio_udp::frame::UdpFramed"]},];
implementors["tokio_uds"] = [{text:"impl&lt;A, C:&nbsp;<a class=\"trait\" href=\"tokio_io/codec/decoder/trait.Decoder.html\" title=\"trait tokio_io::codec::decoder::Decoder\">Decoder</a>&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_uds/struct.UnixDatagramFramed.html\" title=\"struct tokio_uds::UnixDatagramFramed\">UnixDatagramFramed</a>&lt;A, C&gt;",synthetic:false,types:["tokio_uds::frame::UnixDatagramFramed"]},{text:"impl <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"tokio_uds/struct.Incoming.html\" title=\"struct tokio_uds::Incoming\">Incoming</a>",synthetic:false,types:["tokio_uds::incoming::Incoming"]},];
implementors["yamux"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"yamux/struct.Connection.html\" title=\"struct yamux::Connection\">Connection</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>",synthetic:false,types:["yamux::connection::Connection"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()