(function() {var implementors = {};
implementors["libp2p_core"] = [];
implementors["libp2p_swarm"] = [{"text":"impl&lt;TIntoProtoHandler, TProtoHandler, TConnInfo&gt; <a class=\"trait\" href=\"libp2p_core/nodes/handled_node/trait.IntoNodeHandler.html\" title=\"trait libp2p_core::nodes::handled_node::IntoNodeHandler\">IntoNodeHandler</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>TConnInfo, <a class=\"enum\" href=\"libp2p_core/enum.ConnectedPoint.html\" title=\"enum libp2p_core::ConnectedPoint\">ConnectedPoint</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"libp2p_swarm/protocols_handler/struct.NodeHandlerWrapperBuilder.html\" title=\"struct libp2p_swarm::protocols_handler::NodeHandlerWrapperBuilder\">NodeHandlerWrapperBuilder</a>&lt;TIntoProtoHandler&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TIntoProtoHandler: <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.IntoProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::IntoProtocolsHandler\">IntoProtocolsHandler</a>&lt;Handler = TProtoHandler&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;TProtoHandler: <a class=\"trait\" href=\"libp2p_swarm/protocols_handler/trait.ProtocolsHandler.html\" title=\"trait libp2p_swarm::protocols_handler::ProtocolsHandler\">ProtocolsHandler</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;TConnInfo: <a class=\"trait\" href=\"libp2p_core/nodes/collection/trait.ConnectionInfo.html\" title=\"trait libp2p_core::nodes::collection::ConnectionInfo\">ConnectionInfo</a>&lt;PeerId = <a class=\"struct\" href=\"libp2p_core/peer_id/struct.PeerId.html\" title=\"struct libp2p_core::peer_id::PeerId\">PeerId</a>&gt;,&nbsp;</span>","synthetic":false,"types":["libp2p_swarm::protocols_handler::node_handler::NodeHandlerWrapperBuilder"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()