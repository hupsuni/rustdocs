(function() {var implementors = {};
implementors["frame_system"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;AccountInfo&lt;&lt;T as Trait&gt;::Index, &lt;T as Trait&gt;::AccountData&gt;&gt; for Account&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;T as Trait&gt;::Hash&gt; for BlockHash&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_atomic_swap"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;PendingSwap&lt;T&gt;&gt; for PendingSwaps&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_balances"] = [{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;AccountData&lt;&lt;T as Trait&lt;I&gt;&gt;::Balance&gt;&gt; for Account&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;Vec&lt;BalanceLock&lt;&lt;T as Trait&lt;I&gt;&gt;::Balance&gt;&gt;&gt; for Locks&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["pallet_collective"] = [{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;&lt;T as Trait&lt;I&gt;&gt;::Proposal&gt; for ProposalOf&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;Votes&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::BlockNumber&gt;&gt; for Voting&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["pallet_contracts"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Vec&lt;u8&gt;&gt; for PristineCode&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;ContractInfo&lt;T&gt;&gt; for ContractInfoOf&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_democracy"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(Vec&lt;&lt;T as Trait&gt;::AccountId&gt;, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance)&gt; for DepositOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;PreimageStatus&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::BlockNumber&gt;&gt; for Preimages&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;ReferendumInfo&lt;&lt;T as Trait&gt;::BlockNumber, &lt;T as Trait&gt;::Hash, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for ReferendumInfoOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Voting&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::BlockNumber&gt;&gt; for VotingOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;T as Trait&gt;::BlockNumber&gt; for Locks&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(&lt;T as Trait&gt;::BlockNumber, Vec&lt;&lt;T as Trait&gt;::AccountId&gt;)&gt; for Blacklist&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;bool&gt; for Cancellations&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_elections"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Vec&lt;u32&gt;&gt; for ApprovalsOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(u32, u32)&gt; for RegisterInfoOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;VoterInfo&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for VoterInfoOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Vec&lt;Option&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;&gt; for Voters&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_elections_phragmen"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, Vec&lt;&lt;T as Trait&gt;::AccountId&gt;)&gt; for Voting&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_generic_asset"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_generic_asset/trait.Trait.html#associatedtype.Balance\" title=\"type pallet_generic_asset::Trait::Balance\">Balance</a>&gt; for <a class=\"struct\" href=\"pallet_generic_asset/struct.TotalIssuance.html\" title=\"struct pallet_generic_asset::TotalIssuance\">TotalIssuance</a>&lt;T&gt;","synthetic":false,"types":["pallet_generic_asset::TotalIssuance"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_generic_asset/trait.Trait.html#associatedtype.Balance\" title=\"type pallet_generic_asset::Trait::Balance\">Balance</a>&gt; for <a class=\"struct\" href=\"pallet_generic_asset/struct.FreeBalance.html\" title=\"struct pallet_generic_asset::FreeBalance\">FreeBalance</a>&lt;T&gt;","synthetic":false,"types":["pallet_generic_asset::FreeBalance"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_generic_asset/trait.Trait.html#associatedtype.Balance\" title=\"type pallet_generic_asset::Trait::Balance\">Balance</a>&gt; for <a class=\"struct\" href=\"pallet_generic_asset/struct.ReservedBalance.html\" title=\"struct pallet_generic_asset::ReservedBalance\">ReservedBalance</a>&lt;T&gt;","synthetic":false,"types":["pallet_generic_asset::ReservedBalance"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;<a class=\"enum\" href=\"pallet_generic_asset/enum.PermissionVersions.html\" title=\"enum pallet_generic_asset::PermissionVersions\">PermissionVersions</a>&lt;&lt;T as <a class=\"trait\" href=\"frame_system/trait.Trait.html\" title=\"trait frame_system::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"frame_system/trait.Trait.html#associatedtype.AccountId\" title=\"type frame_system::Trait::AccountId\">AccountId</a>&gt;&gt; for <a class=\"struct\" href=\"pallet_generic_asset/struct.Permissions.html\" title=\"struct pallet_generic_asset::Permissions\">Permissions</a>&lt;T&gt;","synthetic":false,"types":["pallet_generic_asset::Permissions"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"pallet_generic_asset/struct.BalanceLock.html\" title=\"struct pallet_generic_asset::BalanceLock\">BalanceLock</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_generic_asset/trait.Trait.html\" title=\"trait pallet_generic_asset::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_generic_asset/trait.Trait.html#associatedtype.Balance\" title=\"type pallet_generic_asset::Trait::Balance\">Balance</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"pallet_generic_asset/struct.Locks.html\" title=\"struct pallet_generic_asset::Locks\">Locks</a>&lt;T&gt;","synthetic":false,"types":["pallet_generic_asset::Locks"]}];
implementors["pallet_identity"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Registration&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for IdentityOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(&lt;T as Trait&gt;::AccountId, Data)&gt; for SuperOf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, Vec&lt;&lt;T as Trait&gt;::AccountId&gt;)&gt; for SubsOf&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_indices"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, bool)&gt; for Accounts&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_multisig"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Multisig&lt;&lt;T as Trait&gt;::BlockNumber, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::AccountId&gt;&gt; for Multisigs&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(Vec&lt;u8&gt;, &lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance)&gt; for Calls&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_node_authorization"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;T as Trait&gt;::AccountId&gt; for Owners&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StoragePrefixedMap&lt;BTreeSet&lt;OpaquePeerId&gt;&gt; for AdditionalConnections","synthetic":false,"types":[]}];
implementors["pallet_proxy"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(Vec&lt;ProxyDefinition&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::ProxyType, &lt;T as Trait&gt;::BlockNumber&gt;&gt;, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance)&gt; for Proxies&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;(Vec&lt;Announcement&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::CallHasher as Hash&gt;::Output, &lt;T as Trait&gt;::BlockNumber&gt;&gt;, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance)&gt; for Announcements&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_recovery"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;RecoveryConfig&lt;&lt;T as Trait&gt;::BlockNumber, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::AccountId&gt;&gt; for Recoverable&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;ActiveRecovery&lt;&lt;T as Trait&gt;::BlockNumber, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::AccountId&gt;&gt; for ActiveRecoveries&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;T as Trait&gt;::AccountId&gt; for Proxy&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_scheduler"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Vec&lt;Option&lt;ScheduledV2&lt;&lt;T as Trait&gt;::Call, &lt;T as Trait&gt;::BlockNumber, &lt;T as Trait&gt;::PalletsOrigin, &lt;T as Trait&gt;::AccountId&gt;&gt;&gt;&gt; for Agenda&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_society"] = [{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;(&lt;&lt;T as Trait&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, BidKind&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;)&gt; for SuspendedCandidates&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;bool&gt; for SuspendedMembers&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["pallet_staking"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;T as Trait&gt;::AccountId&gt; for Bonded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;StakingLedger&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for Ledger&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;RewardDestination&lt;&lt;T as Trait&gt;::AccountId&gt;&gt; for Payee&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;ValidatorPrefs&gt; for Validators&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Nominations&lt;&lt;T as Trait&gt;::AccountId&gt;&gt; for Nominators&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StoragePrefixedMap&lt;u32&gt; for ErasStartSessionIndex","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Exposure&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for ErasStakers&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Exposure&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for ErasStakersClipped&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;ValidatorPrefs&gt; for ErasValidatorPrefs&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt; for ErasValidatorReward&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;EraRewardPoints&lt;&lt;T as Trait&gt;::AccountId&gt;&gt; for ErasRewardPoints&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt; for ErasTotalStake&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;Vec&lt;UnappliedSlash&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt;&gt; for UnappliedSlashes&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_treasury"] = [{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;OpenTip&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::BlockNumber, &lt;T as Trait&gt;::Hash&gt;&gt; for Tips&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;Vec&lt;u8&gt;&gt; for Reasons&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&lt;I&gt;, I:&nbsp;Instance&gt; StoragePrefixedMap&lt;Bounty&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as Trait&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::BlockNumber&gt;&gt; for Bounties&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Instance&gt; StoragePrefixedMap&lt;Vec&lt;u8&gt;&gt; for BountyDescriptions&lt;I&gt;","synthetic":false,"types":[]}];
implementors["pallet_vesting"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; StoragePrefixedMap&lt;VestingInfo&lt;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance, &lt;T as Trait&gt;::BlockNumber&gt;&gt; for Vesting&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()