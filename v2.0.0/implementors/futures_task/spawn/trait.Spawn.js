(function() {var implementors = {};
implementors["futures_diagnose"] = [{"text":"impl&lt;T&gt; Spawn for DiagSpawn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Spawn,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Spawn for LocalSpawner","synthetic":false,"types":[]},{"text":"impl Spawn for ThreadPool","synthetic":false,"types":[]}];
implementors["node_testing"] = [{"text":"impl <a class=\"trait\" href=\"futures_task/spawn/trait.Spawn.html\" title=\"trait futures_task::spawn::Spawn\">Spawn</a> for <a class=\"struct\" href=\"node_testing/bench/struct.TaskExecutor.html\" title=\"struct node_testing::bench::TaskExecutor\">TaskExecutor</a>","synthetic":false,"types":["node_testing::bench::TaskExecutor"]}];
implementors["sc_service"] = [{"text":"impl <a class=\"trait\" href=\"futures_task/spawn/trait.Spawn.html\" title=\"trait futures_task::spawn::Spawn\">Spawn</a> for <a class=\"struct\" href=\"sc_service/struct.SpawnTaskHandle.html\" title=\"struct sc_service::SpawnTaskHandle\">SpawnTaskHandle</a>","synthetic":false,"types":["sc_service::task_manager::SpawnTaskHandle"]}];
implementors["sp_core"] = [{"text":"impl <a class=\"trait\" href=\"futures_task/spawn/trait.Spawn.html\" title=\"trait futures_task::spawn::Spawn\">Spawn</a> for <a class=\"struct\" href=\"sp_core/tasks/struct.Executor.html\" title=\"struct sp_core::tasks::Executor\">Executor</a>","synthetic":false,"types":["sp_core::tasks::Executor"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()