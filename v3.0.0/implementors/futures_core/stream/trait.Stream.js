(function() {var implementors = {};
implementors["sc_network"] = [{"text":"impl&lt;B:&nbsp;<a class=\"trait\" href=\"sp_runtime/traits/trait.Block.html\" title=\"trait sp_runtime::traits::Block\">Block</a>&gt; Stream for <a class=\"struct\" href=\"sc_network/light_client_requests/sender/struct.LightClientRequestSender.html\" title=\"struct sc_network::light_client_requests::sender::LightClientRequestSender\">LightClientRequestSender</a>&lt;B&gt;","synthetic":false,"types":["sc_network::light_client_requests::sender::LightClientRequestSender"]}];
implementors["sc_peerset"] = [{"text":"impl Stream for <a class=\"struct\" href=\"sc_peerset/struct.Peerset.html\" title=\"struct sc_peerset::Peerset\">Peerset</a>","synthetic":false,"types":["sc_peerset::Peerset"]}];
implementors["sp_utils"] = [{"text":"impl&lt;T&gt; Stream for <a class=\"struct\" href=\"sp_utils/mpsc/struct.TracingUnboundedReceiver.html\" title=\"struct sp_utils::mpsc::TracingUnboundedReceiver\">TracingUnboundedReceiver</a>&lt;T&gt;","synthetic":false,"types":["sp_utils::mpsc::inner::TracingUnboundedReceiver"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()